# Most configuration options in this file should not need to be
# changed for standard installations. However, you will need to set
# options in a similar file (also in this directory) named
# application-default.properties
# Note that this file is not and should not be distributed with
# application code as it contains configuration-specific information,
# including database credentials. Following are several options
# that should be set.
#
#  # Server config #
#
# The port of the web application should default to 8080;
# You can change this if desired. contextPath is the top-level
# prefix containing this application on your application server;
# If no other applications are running, setting to / is fine.
# Note that application server deployments can override the
# contextPath.
#
#
 server.contextPath=/ced2ar-rdb
 server.port=8080
#
#  # Database config #
#
# In this example we have "db" as database name and
# "admin_user_name" as username, etc. 'port' should be substituted
# with the actual port number used by the db server.
#
# spring.datasource.url = jdbc:postgresql://my.server.edu:port/db
# spring.datasource.username = admin_user_name
# spring.datasource.password = some_password

ced2ar.uploadDir=upload-dir

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true
#logging.level.org.springframework.web=DEBUG
#spring.jpa.properties.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Higher verbosity options:
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.use_sql_comments=true

# better portability for auto-increment sequences
spring.jpa.properties.hibernate.id.new_generator_mappings=true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy


# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

spring.view.prefix=/WEB-INF/views/
spring.view.suffix=.jsp

# Limit the maximum upload size
multipart.maxFileSize = 200MB
multipart.maxRequestSize = 200MB